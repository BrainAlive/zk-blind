const { expect } = require("chai");
const { ethers } = require("hardhat");

describe("Token contract", function () {
  it("User's public key and company should be added to contract mapping", async function () {
    const [owner] = await ethers.getSigners();

    const verifier = await ethers.getContractFactory(
      "contracts/Verifier.sol:Verifier"
    );
    const v = await verifier.deploy();
    await v.deployed();

    console.log("Verifier.sol deployed to:", v.address);

    const blind = await ethers.getContractFactory("Blind");

    const bl = await blind.deploy(v.address);
    await bl.deployed();
    console.log("Blind.sol deployed to:", bl.address);

    const a = [
      "0x20e318a6fccf1eefc866345243313ed354baf825391ddf59c478db08db0d95a7",
      "0x203efc711e5fb099c71af02ca61067ea702a2c4ca8dd9971b6c42e918dc172a2",
    ];
    const b = [
      [
        "0x1b0bd9a47afdeb9ce10a5dd710ffec891029b271b73e549d538705f7bea3b8dd",
        "0x144e33e5208f22b924e79dad1530910f4943c471d6a0ecb47c9087005e822d13",
      ],
      [
        "0x0b30cbf936ceffc4a0662995a46864329fe3eb8ef19db510296a5fca7e921dcf",
        "0x004f5f432a0bc290301a9659234806b777756605da0e6c1b810abece4b0c2cd2",
      ],
    ];
    const c = [
      "0x1c8b29a792b3f494b4ba032def4041f3d47bf94a611d7c571cfc996b0c0bd710",
      "0x1a5317f6f9b1c01f4b7ceb134bb38bfb00761d25c669da62b99bd0f34d8f5070",
    ];
    const input = [
      "0x0000000000000000000000000000000000c8430c6464e64ddda07a9b863d8881",
      "0x0000000000000000000000000000000001cd0da2c4ae4218b0cade824b613b37",
      "0x000000000000000000000000000000000062e5c346b31c47a050182d2eafd848",
      "0x00000000000000000000000000000000000618669ce3a3538eaddc8d6ced08b9",
      "0x0000000000000000000000000000000000d75cdc8d790c81ab9c23625464a414",
      "0x00000000000000000000000000000000011954a4b6d45c95fa48f63ffec9f0ad",
      "0x0000000000000000000000000000000001e075c1b0cf7069eac655ee53f6cb80",
      "0x000000000000000000000000000000000060409af02b53bf34965950c557a044",
      "0x000000000000000000000000000000000016b77d2e3917ea5af4e7363a68cffe",
      "0x00000000000000000000000000000000007283ffb204c691aaf1bce0ac279328",
      "0x0000000000000000000000000000000001785e45f8b6da078bb330084a557dbd",
      "0x00000000000000000000000000000000003520db147c498f546c95853efc64f3",
      "0x0000000000000000000000000000000001a652f8aede242fe83a7af1091cc560",
      "0x000000000000000000000000000000000177e578067b3fc1873b4838e2597d79",
      "0x000000000000000000000000000000000082c7f533459aff65a02e6f635fae51",
      "0x0000000000000000000000000000000000a00bcf4e84dc9a972a8eab541dfb33",
      "0x000000000000000000000000000000000000dbbace12b0ce3ef3dcde63800d8b",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000062",
      "0x0000000000000000000000000000000000000000000000000000000000000065",
      "0x0000000000000000000000000000000000000000000000000000000000000072",
      "0x000000000000000000000000000000000000000000000000000000000000006b",
      "0x0000000000000000000000000000000000000000000000000000000000000065",
      "0x000000000000000000000000000000000000000000000000000000000000006c",
      "0x0000000000000000000000000000000000000000000000000000000000000065",
      "0x0000000000000000000000000000000000000000000000000000000000000079",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000000000000000000000000000",
    ];

    const add = await bl.add(a, b, c, input);
    console.log(add);

    const res = await bl.get("0x0000000000000000000000000000000000000000");
    console.log(res);

    expect(res).to.equal("berkeley");
  });
});
